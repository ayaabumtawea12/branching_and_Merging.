1-Create a (feature)branch called feature/uppercase (yes, feature/uppercase is a perfectly legal branch name, and a common convention).
2-Switch to this branch
git checkout -b feature/uppercase

3-What is the output of git status?
On branch feature/uppercase

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        greeting.txt

nothing added to commit but untracked files present (use "git add" to track)



4-Edit the greeting.txt to contain an uppercase greeting
 echo "uppercase greeting" >greeting.txt

5-Add greeting.txt files to staging area and commit
$ git add greeting.txt
[feature/uppercase (root-commit) 0d2255f] change content file
 1 file changed, 1 insertion(+)
 create mode 100644 greeting.txt

6-What is the output of git branch?
* feature/uppercase

7-What is the output of git log --oneline --graph --all
* 0d2255f (HEAD -> feature/uppercase) change content file

8-Switch to the master branch
git checkout main

9-Use cat to see the contents of the greetings
$ cat greeting.txt
uppercase greeting


10-Delete the uppercase branch
git branch -D uppercase
Deleted branch feature/uppercase (was 0d2255f).






